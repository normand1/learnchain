name: Publish to npm

on:
  workflow_dispatch:  # Manual trigger
  release:
    types: [published]  # Trigger when a release is published

permissions:
  contents: read  # Required to download release assets

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      PACKAGE_NAME: learnchain

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download release binaries
        run: |
          # Get the latest release tag
          TAG=${GITHUB_REF#refs/tags/}
          if [ -z "$TAG" ] || [ "$TAG" = "$GITHUB_REF" ]; then
            TAG=$(gh release list --limit 1 --json tagName --jq '.[0].tagName')
          fi

          echo "Downloading binaries from release: $TAG"
          echo "RELEASE_TAG=$TAG" >> "$GITHUB_ENV"

          # Download all binaries from the release
          mkdir -p dist
          gh release download "$TAG" --pattern "${PACKAGE_NAME}-*" --dir dist/

          # Verify binaries were downloaded
          ls -lh dist/
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Align package version with release tag
        run: |
          if [ -z "$RELEASE_TAG" ]; then
            echo "RELEASE_TAG not set" >&2
            exit 1
          fi
          VERSION=${RELEASE_TAG#v}
          if [ -z "$VERSION" ]; then
            echo "Unable to derive version from tag: $RELEASE_TAG" >&2
            exit 1
          fi
          echo "Using package version $VERSION"
          npm version "$VERSION" --no-git-tag-version

      - name: Generate launcher script
        run: node scripts/generate-launcher.js

      - name: Verify package contents
        run: |
          echo "Preparing npm package: ${PACKAGE_NAME}"
          npm pack --dry-run
          echo "Package size:"
          du -sh .

      - name: Publish to npm
        run: |
          echo "Publishing ${PACKAGE_NAME} to npm"
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
